name: "Update Virtool Reference"
description: "Updates a Virtool reference repository in-place using the official CLI tool"

inputs:
  owner:
    description: "Owner of the reference repository to be updated"
    required: true
    default: ${{ github.repository_owner }}
  repository:
    description: "'owner/repository_name' of the reference repository to be updated"
    required: true
    default: ${{ github.repository_name }}
  ref:
    description: "Branch/Reference to be checked out and updated"
    required: true
    default: 'main'
  token:
    description: "Personal access token used to access the repository"
    required: false
    default: ${{ github.token }}
  create-new-branch:
    description: "Create a new branch and commit updates to it"
    required: false
    default: false
  new-branch-name:
    description: "Give a name to a new branch"
    required: false
    default: 'new-accessions'

outputs:
  active-branch: 
    description: "Name of branch committed to"
    value: ${{ steps.branch-name.outputs.active_branch }}

runs:
  using: "composite"

  steps:
    - name: Check out repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }}
        token: ${{ inputs.token }}
        ref: ${{ inputs.ref }}

    - name: Install virtool-cli
      run: |
        git config --global --add safe.directory $PWD
        git status
        pip install virtool-cli
      shell: bash
    
    - name: Get isolates
      run: |
        virtool ref taxid -src src
        virtool ref repair -src src
        virtool ref isolate -src src
      shell: bash

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Automated virtool-cli isolate retrieval on the database
      if: ${{ inputs.create-new-branch == 'false' }}
    
    - name: Set old branch name
      if: ${{ inputs.create-new-branch == 'false' }}
      run: |
        echo $branch_name
        echo "BRANCH_NAME=$ref" >> ${GITHUB_ENV}
      env:
        ref: ${{ inputs.ref }}
      shell: bash
    
    - name: Set branch name
      if: ${{ inputs.create-new-branch == 'true' }}
      run: |
        echo $branch_name
        echo "BRANCH_NAME=$new_name" >> ${GITHUB_ENV}
      env:
        new_name: ${{ inputs.new-branch-name }}
      shell: bash

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: ${{ env.BRANCH_NAME }}
        create_branch: true
        commit_message: Automated virtool-cli isolate retrieval on the database
      if: ${{ inputs.create-new-branch == 'true' }}

    - run: echo "active_branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
      id: branch-name
      shell: bash